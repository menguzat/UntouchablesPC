import"../../../core/debug.js";import{BindGroupFormat as t,BindBufferFormat as e}from"../bind-group-format.js";import{UniformBufferFormat as r,UniformFormat as n}from"../uniform-buffer-format.js";import{BlendState as o}from"../blend-state.js";import{SHADERLANGUAGE_WGSL as s,UNIFORMTYPE_VEC4 as a,UNIFORMTYPE_FLOAT as i,UNIFORM_BUFFER_DEFAULT_SLOT_NAME as u,SHADERSTAGE_VERTEX as f,SHADERSTAGE_FRAGMENT as d,CLEARFLAG_COLOR as p,CLEARFLAG_DEPTH as c,CLEARFLAG_STENCIL as l,CULLFACE_NONE as h,BINDGROUP_MESH as m,PRIMITIVE_TRISTRIP as v}from"../constants.js";import{Shader as b}from"../shader.js";import{BindGroup as x}from"../bind-group.js";import{UniformBuffer as g}from"../uniform-buffer.js";import{DepthState as w}from"../depth-state.js";const j={type:v,base:0,count:4,indexed:!1};class I{constructor(o){const p="\n\n\t\t\t\t\t\tstruct ub_mesh {\n\t\t\t\t\t\t\t\tcolor : vec4f,\n\t\t\t\t\t\t\t\tdepth: f32\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@group(0) @binding(0) var<uniform> ubMesh : ub_mesh;\n\n\t\t\t\t\t\tvar<private> pos : array<vec2f, 4> = array<vec2f, 4>(\n\t\t\t\t\t\t\t\tvec2(-1.0, 1.0), vec2(1.0, 1.0),\n\t\t\t\t\t\t\t\tvec2(-1.0, -1.0), vec2(1.0, -1.0)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tstruct VertexOutput {\n\t\t\t\t\t\t\t\t@builtin(position) position : vec4f\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@vertex\n\t\t\t\t\t\tfn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> VertexOutput {\n\t\t\t\t\t\t\t\tvar output : VertexOutput;\n\t\t\t\t\t\t\t\toutput.position = vec4(pos[vertexIndex], ubMesh.depth, 1.0);\n\t\t\t\t\t\t\t\treturn output;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@fragment\n\t\t\t\t\t\tfn fragmentMain() -> @location(0) vec4f {\n\t\t\t\t\t\t\t\treturn ubMesh.color;\n\t\t\t\t\t\t}\n\t\t\t\t";this.shader=new b(o,{name:"WebGPUClearRendererShader",shaderLanguage:s,vshader:p,fshader:p}),this.uniformBuffer=new g(o,new r(o,[new n("color",a),new n("depth",i)]));const c=new t(o,[new e(u,f|d)]);this.bindGroup=new x(o,c,this.uniformBuffer),this.colorData=new Float32Array(4),this.colorId=o.scope.resolve("color"),this.depthId=o.scope.resolve("depth")}clear(t,e,r,n){var s;const a=null!=(s=(r=r||n).flags)?s:n.flags;if(0!==a){if(a&p&&e.colorBuffer){var i;const e=null!=(i=r.color)?i:n.color;this.colorData.set(e),t.setBlendState(o.DEFAULT)}else t.setBlendState(o.NOWRITE);if(this.colorId.setValue(this.colorData),a&c&&e.depth){var u;const e=null!=(u=r.depth)?u:n.depth;this.depthId.setValue(e),t.setDepthState(w.WRITEDEPTH)}else this.depthId.setValue(1),t.setDepthState(w.NODEPTH);a&l&&e.stencil,t.setCullMode(h),t.setShader(this.shader);const s=this.bindGroup;s.defaultUniformBuffer&&s.defaultUniformBuffer.update(),s.update(),t.setBindGroup(m,s),t.draw(j)}}}export{I as WebgpuClearRenderer};
