class e{constructor(){this.buffer=null}destroy(e){this.buffer&&(this.buffer.destroy(),this.buffer=null)}get initialized(){return!!this.buffer}loseContext(){}unlock(e,t,f,r){var u,s;const i=e.wgpu;if(!this.buffer){const t=r.byteLength+3&-4;this.buffer=e.wgpu.createBuffer({size:t,usage:f|GPUBufferUsage.COPY_DST})}const n=null!=(u=r.byteOffset)?u:0,b=new Uint8Array(null!=(s=r.buffer)?s:r,n,r.byteLength),l=new Uint8Array(this.buffer.size);l.set(b),i.queue.writeBuffer(this.buffer,0,l,0,l.length)}}export{e as WebgpuBuffer};
