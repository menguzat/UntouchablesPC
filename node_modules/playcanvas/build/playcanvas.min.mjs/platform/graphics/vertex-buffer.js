import"../../core/debug.js";import{BUFFER_STATIC as t}from"./constants.js";let e=0;class s{constructor(s,i,r,h=t,a){this.device=s,this.format=i,this.numVertices=r,this.usage=h,this.id=e++,this.impl=s.createVertexBufferImpl(this,i),this.numBytes=i.verticesByteSize?i.verticesByteSize:i.size*r,this.adjustVramSizeTracking(s._vram,this.numBytes),a?this.setData(a):this.storage=new ArrayBuffer(this.numBytes),this.device.buffers.push(this)}destroy(){const t=this.device,e=t.buffers.indexOf(this);-1!==e&&t.buffers.splice(e,1),this.impl.initialized&&(this.impl.destroy(t),this.adjustVramSizeTracking(t._vram,-this.storage.byteLength))}adjustVramSizeTracking(t,e){t.vb+=e}loseContext(){this.impl.loseContext()}getFormat(){return this.format}getUsage(){return this.usage}getNumVertices(){return this.numVertices}lock(){return this.storage}unlock(){this.impl.unlock(this)}setData(t){return t.byteLength===this.numBytes&&(this.storage=t,this.unlock(),!0)}}export{s as VertexBuffer};
