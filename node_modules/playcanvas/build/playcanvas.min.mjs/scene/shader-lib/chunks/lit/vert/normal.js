var t="\n#ifdef MORPHING_TEXTURE_BASED_NORMAL\nuniform highp sampler2D morphNormalTex;\n#endif\n\nvec3 getNormal() {\n\t\t#ifdef SKIN\n\t\tdNormalMatrix = mat3(dModelMatrix[0].xyz, dModelMatrix[1].xyz, dModelMatrix[2].xyz);\n\t\t#elif defined(INSTANCING)\n\t\tdNormalMatrix = mat3(instance_line1.xyz, instance_line2.xyz, instance_line3.xyz);\n\t\t#else\n\t\tdNormalMatrix = matrix_normal;\n\t\t#endif\n\n\t\tvec3 tempNormal = vertex_normal;\n\n\t\t#ifdef MORPHING\n\t\t#ifdef MORPHING_NRM03\n\t\ttempNormal += morph_weights_a[0] * morph_nrm0;\n\t\ttempNormal += morph_weights_a[1] * morph_nrm1;\n\t\ttempNormal += morph_weights_a[2] * morph_nrm2;\n\t\ttempNormal += morph_weights_a[3] * morph_nrm3;\n\t\t#endif\n\t\t#ifdef MORPHING_NRM47\n\t\ttempNormal += morph_weights_b[0] * morph_nrm4;\n\t\ttempNormal += morph_weights_b[1] * morph_nrm5;\n\t\ttempNormal += morph_weights_b[2] * morph_nrm6;\n\t\ttempNormal += morph_weights_b[3] * morph_nrm7;\n\t\t#endif\n\t\t#endif\n\n\t\t#ifdef MORPHING_TEXTURE_BASED_NORMAL\n\t\t// apply morph offset from texture\n\t\tvec2 morphUV = getTextureMorphCoords();\n\t\tvec3 morphNormal = texture2D(morphNormalTex, morphUV).xyz;\n\t\ttempNormal += morphNormal;\n\t\t#endif\n\n\t\treturn normalize(dNormalMatrix * tempNormal);\n}\n";export{t as default};
