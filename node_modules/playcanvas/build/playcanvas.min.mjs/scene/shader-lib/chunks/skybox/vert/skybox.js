var t="\nattribute vec3 aPosition;\n\n#ifndef VIEWMATRIX\n#define VIEWMATRIX\nuniform mat4 matrix_view;\n#endif\n\nuniform mat4 matrix_projectionSkybox;\nuniform mat3 cubeMapRotationMatrix;\n\nvarying vec3 vViewDir;\n\nvoid main(void) {\n\t\tmat4 view = matrix_view;\n\t\tview[3][0] = view[3][1] = view[3][2] = 0.0;\n\t\tgl_Position = matrix_projectionSkybox * view * vec4(aPosition, 1.0);\n\n\t\t// Force skybox to far Z, regardless of the clip planes on the camera\n\t\t// Subtract a tiny fudge factor to ensure floating point errors don't\n\t\t// still push pixels beyond far Z. See:\n\t\t// http://www.opengl.org/discussion_boards/showthread.php/171867-skybox-problem\n\n\t\tgl_Position.z = gl_Position.w - 0.00001;\n\t\tvViewDir = aPosition * cubeMapRotationMatrix;\n}\n";export{t as default};
