var t="\nuniform vec3 outBoundsMul;\nuniform vec3 outBoundsAdd;\n\nvec2 encodeFloatRG( float v ) {\n\t\tvec2 enc = vec2(1.0, 255.0) * v;\n\t\tenc = fract(enc);\n\t\tenc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\n\t\treturn enc;\n}\n\nvec4 encodeFloatRGBA( float v ) {\n\t\tvec4 enc = vec4(1.0, 255.0, 65025.0, 160581375.0) * v;\n\t\tenc = fract(enc);\n\t\tenc -= enc.yzww * vec4(1.0/255.0,1.0/255.0,1.0/255.0,0.0);\n\t\treturn enc;\n}\n\nvoid writeOutput() {\n\t\toutPos = outPos * outBoundsMul + outBoundsAdd;\n\t\toutAngle = fract(outAngle / PI2);\n\n\t\toutVel = (outVel / maxVel) + vec3(0.5); // TODO: mul\n\n\t\tfloat maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));\n\t\tfloat maxPosLife = lifetime+1.0;\n\t\toutLife = (outLife + maxNegLife) / (maxNegLife + maxPosLife);\n\n\t\tif (gl_FragCoord.y < 1.0) {\n\t\t\t\tgl_FragColor = vec4(encodeFloatRG(outPos.x), encodeFloatRG(outPos.y));\n\t\t} else if (gl_FragCoord.y < 2.0) {\n\t\t\t\tgl_FragColor = vec4(encodeFloatRG(outPos.z), encodeFloatRG(outAngle));\n\t\t} else if (gl_FragCoord.y < 3.0) {\n\t\t\t\tgl_FragColor = vec4(outVel, visMode*0.5+0.5);\n\t\t} else {\n\t\t\t\tgl_FragColor = encodeFloatRGBA(outLife);\n\t\t}\n}\n";export{t as default};
