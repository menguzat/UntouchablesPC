import{Shader as e}from"../../platform/graphics/shader.js";import{ShaderUtils as r}from"../../platform/graphics/shader-utils.js";import{shaderChunks as t}from"./chunks/chunks.js";import{getProgramLibrary as n}from"./get-program-library.js";import"../../core/debug.js";function a(n,a,o,i=!1){return new e(n,r.createDefinition(n,{name:`${a}_${o}`,vertexCode:t[a],fragmentCode:t[o],useTransformFeedback:i}))}function o(t,a,o,i,s,c=!1){const d=n(t);let m=d.getCachedShader(i);return m||(m=new e(t,r.createDefinition(t,{name:i,vertexCode:a,fragmentCode:o,attributes:s,useTransformFeedback:c})),d.setCachedShader(i,m)),m}function i(e,r){var t;const a=e.definition,o=`${null!=(t=a.name)?t:"shader"}-id-${e.id}`,i={generateKey:function(e){return o},createShaderDefinition:function(e,r){return a}},s="shader",c=n(e.device);c.register(s,i);const d=c.getProgram(s,{},r);return c.unregister(s),d}t.createShader=a,t.createShaderFromCode=o;export{a as createShader,o as createShaderFromCode,i as processShader};
