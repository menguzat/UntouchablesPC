import{math as t}from"./math.js";class e{constructor(t=0,e=0,s=0,i=1){this.r=void 0,this.g=void 0,this.b=void 0,this.a=void 0;const r=t.length;3===r||4===r?(this.r=t[0],this.g=t[1],this.b=t[2],this.a=void 0!==t[3]?t[3]:1):(this.r=t,this.g=e,this.b=s,this.a=i)}clone(){return new(0,this.constructor)(this.r,this.g,this.b,this.a)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this.a=t.a,this}equals(t){return this.r===t.r&&this.g===t.g&&this.b===t.b&&this.a===t.a}set(t,e,s,i=1){return this.r=t,this.g=e,this.b=s,this.a=i,this}lerp(t,e,s){return this.r=t.r+s*(e.r-t.r),this.g=t.g+s*(e.g-t.g),this.b=t.b+s*(e.b-t.b),this.a=t.a+s*(e.a-t.a),this}fromString(e){const s=parseInt(e.replace("#","0x"),16);let i;return e.length>7?i=t.intToBytes32(s):(i=t.intToBytes24(s),i[3]=255),this.set(i[0]/255,i[1]/255,i[2]/255,i[3]/255),this}toString(t){let e="#"+((1<<24)+(Math.round(255*this.r)<<16)+(Math.round(255*this.g)<<8)+Math.round(255*this.b)).toString(16).slice(1);if(!0===t){const t=Math.round(255*this.a).toString(16);this.a<16/255?e+="0"+t:e+=t}return e}}e.BLACK=Object.freeze(new e(0,0,0,1)),e.BLUE=Object.freeze(new e(0,0,1,1)),e.CYAN=Object.freeze(new e(0,1,1,1)),e.GRAY=Object.freeze(new e(.5,.5,.5,1)),e.GREEN=Object.freeze(new e(0,1,0,1)),e.MAGENTA=Object.freeze(new e(1,0,1,1)),e.RED=Object.freeze(new e(1,0,0,1)),e.WHITE=Object.freeze(new e(1,1,1,1)),e.YELLOW=Object.freeze(new e(1,1,0,1));export{e as Color};
