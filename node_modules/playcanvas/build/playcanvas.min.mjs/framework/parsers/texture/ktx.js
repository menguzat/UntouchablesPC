import{extends as e}from"../../../_virtual/_rollupPluginBabelHelpers.js";import"../../../core/debug.js";import{ADDRESS_CLAMP_TO_EDGE as t,ADDRESS_REPEAT as r,PIXELFORMAT_DXT1 as a,PIXELFORMAT_DXT3 as s,PIXELFORMAT_DXT5 as l,PIXELFORMAT_ETC1 as n,PIXELFORMAT_ETC2_RGB as i,PIXELFORMAT_ETC2_RGBA as o,PIXELFORMAT_PVRTC_4BPP_RGB_1 as p,PIXELFORMAT_PVRTC_2BPP_RGB_1 as m,PIXELFORMAT_PVRTC_4BPP_RGBA_1 as u,PIXELFORMAT_PVRTC_2BPP_RGBA_1 as f,PIXELFORMAT_RGB8 as c,PIXELFORMAT_RGBA8 as h,PIXELFORMAT_SRGB as d,PIXELFORMAT_SRGBA as b,PIXELFORMAT_111110F as g,PIXELFORMAT_RGB16F as y,PIXELFORMAT_RGBA16F as x}from"../../../platform/graphics/constants.js";import{Texture as v}from"../../../platform/graphics/texture.js";import{Asset as O}from"../../asset/asset.js";const w=[1481919403,3140563232,169478669],A={33776:a,33778:s,33779:l,36196:n,37492:i,37496:o,35840:p,35841:m,35842:u,35843:f,32849:c,32856:h,35905:d,35907:b,35898:g,34843:y,34842:x};class F{constructor(e){this.maxRetries=0}load(e,t,r){O.fetchArrayBuffer(e.load,t,r,this.maxRetries)}open(a,s,l,n={}){const i=this.parse(s);if(!i)return null;const o=new v(l,e({name:a,addressU:i.cubemap?t:r,addressV:i.cubemap?t:r,width:i.width,height:i.height,format:i.format,cubemap:i.cubemap,levels:i.levels},n));return o.upload(),o}parse(e){const t=new Uint32Array(e);if(w[0]!==t[0]||w[1]!==t[1]||w[2]!==t[2])return null;const r={endianness:t[3],glType:t[4],glTypeSize:t[5],glFormat:t[6],glInternalFormat:t[7],glBaseInternalFormat:t[8],pixelWidth:t[9],pixelHeight:t[10],pixelDepth:t[11],numberOfArrayElements:t[12],numberOfFaces:t[13],numberOfMipmapLevels:t[14],bytesOfKeyValueData:t[15]};if(r.pixelDepth>1)return null;if(0!==r.numberOfArrayElements)return null;const a=A[r.glInternalFormat];if(void 0===a)return null;let s=16+r.bytesOfKeyValueData/4;const l=r.numberOfFaces>1,n=[];for(let m=0;m<(r.numberOfMipmapLevels||1);m++){const r=t[s++];l&&n.push([]);const u=l?n[m]:n;for(let t=0;t<(l?6:1);++t)u.push((i=e,o=4*s,p=r,a===g?new Uint32Array(i,o,p/4):new Uint8Array(i,o,p))),s+=r+3>>2}var i,o,p;return{format:a,width:r.pixelWidth,height:r.pixelHeight,levels:n,cubemap:l}}}export{F as KtxParser};
