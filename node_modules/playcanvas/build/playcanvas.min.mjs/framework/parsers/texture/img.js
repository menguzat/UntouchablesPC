import{extends as o}from"../../../_virtual/_rollupPluginBabelHelpers.js";import{PIXELFORMAT_RGBA8 as t}from"../../../platform/graphics/constants.js";import{Texture as e}from"../../../platform/graphics/texture.js";import{http as i}from"../../../platform/net/http.js";import{ABSOLUTE_URL as r}from"../../asset/constants.js";class s{constructor(o,t){this.crossOrigin=o.prefix?"anonymous":null,this.maxRetries=0,this.device=t}load(o,t,e){var i;const s=!(null==e||null==(i=e.file)||!i.contents);if(s){if(this.device.supportsImageBitmap)return void this._loadImageBitmapFromBlob(new Blob([e.file.contents]),t);o={load:URL.createObjectURL(new Blob([e.file.contents])),original:o.original}}const n=(e,i)=>{s&&URL.revokeObjectURL(o.load),t(e,i)};let a;e&&e.options&&e.options.hasOwnProperty("crossOrigin")?a=e.options.crossOrigin:r.test(o.load)&&(a=this.crossOrigin),this.device.supportsImageBitmap?this._loadImageBitmap(o.load,o.original,a,n):this._loadImage(o.load,o.original,a,n)}open(i,r,s,n={}){const a=new e(s,o({name:i,width:r.width,height:r.height,format:t},n));return a.setSource(r),a}_loadImage(o,t,e,i){const r=new Image;e&&(r.crossOrigin=e);let s=0;const n=this.maxRetries;let a;r.onload=function(){i(null,r)},r.onerror=function(){if(!a)if(n>0&&++s<=n){const e=100*Math.pow(2,s);console.log(`Error loading Texture from: '${t}' - Retrying in ${e}ms...`);const i=o.indexOf("?")>=0?"&":"?";a=setTimeout((function(){r.src=o+i+"retry="+Date.now(),a=null}),e)}else i(`Error loading Texture from: '${t}'`)},r.src=o}_loadImageBitmap(o,t,e,r){const s={cache:!0,responseType:"blob",retry:this.maxRetries>0,maxRetries:this.maxRetries};i.get(o,s,((o,t)=>{o?r(o):this._loadImageBitmapFromBlob(t,r)}))}_loadImageBitmapFromBlob(o,t){createImageBitmap(o,{premultiplyAlpha:"none",colorSpaceConversion:"none"}).then((o=>t(null,o))).catch((o=>t(o)))}}export{s as ImgParser};
