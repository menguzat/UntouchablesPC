import{path as e}from"../../core/path.js";import{Quat as t}from"../../core/math/quat.js";import{Vec3 as n}from"../../core/math/vec3.js";import{Http as s,http as o}from"../../platform/net/http.js";import{Animation as a,Node as r,Key as i}from"../../scene/animation/animation.js";import{AnimEvents as l}from"../anim/evaluator/anim-events.js";import{GlbParser as m}from"../parsers/glb-parser.js";class p{constructor(e){this.handlerType="animation",this.device=e.graphicsDevice,this.assets=e.assets,this.maxRetries=0}load(t,n,a){"string"==typeof t&&(t={load:t,original:t});const r={retry:this.maxRetries>0,maxRetries:this.maxRetries};(t.load.startsWith("blob:")||t.load.startsWith("data:"))&&(".glb"===e.getExtension(t.original).toLowerCase()?r.responseType=s.ResponseType.ARRAY_BUFFER:r.responseType=s.ResponseType.JSON),o.get(t.load,r,((s,o)=>{var r;s?n(`Error loading animation resource: ${t.original} [${s}]`):".glb"===e.getExtension(t.original).toLowerCase()?m.parse("filename.glb","",o,this.device,this.assets,null!=(r=null==a?void 0:a.options)?r:{},((e,t)=>{if(e)n(e);else{var s;const e=t.animations;if(null!=a&&null!=(s=a.data)&&s.events)for(let t=0;t<e.length;t++)e[t].events=new l(Object.values(a.data.events));t.destroy(),n(null,e)}})):n(null,this["_parseAnimationV"+o.animation.version](o))}))}open(e,t,n){return t}patch(e,t){}_parseAnimationV3(e){const s=e.animation,o=new a;o.name=s.name,o.duration=s.duration;for(let e=0;e<s.nodes.length;e++){const a=new r,l=s.nodes[e];a._name=l.name;for(let e=0;e<l.keys.length;e++){const s=l.keys[e],o=s.time,r=s.pos,m=s.rot,p=s.scale,d=new n(r[0],r[1],r[2]),c=(new t).setFromEulerAngles(m[0],m[1],m[2]),h=new n(p[0],p[1],p[2]),u=new i(o,d,c,h);a._keys.push(u)}o.addNode(a)}return o}_parseAnimationV4(e){const s=e.animation,o=new a;o.name=s.name,o.duration=s.duration;for(let e=0;e<s.nodes.length;e++){const a=new r,l=s.nodes[e];a._name=l.name;const m=l.defaults.p,p=l.defaults.r,d=l.defaults.s;for(let e=0;e<l.keys.length;e++){const s=l.keys[e],o=s.t,r=m||s.p,c=p||s.r,h=d||s.s,u=new n(r[0],r[1],r[2]),g=(new t).setFromEulerAngles(c[0],c[1],c[2]),f=new n(h[0],h[1],h[2]),w=new i(o,u,g,f);a._keys.push(w)}o.addNode(a)}return o}}export{p as AnimationHandler};
